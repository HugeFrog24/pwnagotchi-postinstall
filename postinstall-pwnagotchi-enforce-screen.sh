#!/usr/bin/env bash
# Pwnagotchi-style display config enforcer (idempotent, change-aware)
# - Comments out stray ui.display.* / ui.invert keys in conf.d/*
# - Ensures conf.d/display.toml has your chosen values
# - Prints restart hint only if something changed

set -euo pipefail
[[ $EUID -eq 0 ]] || { echo "(╥☁╥ ) run me as root pls" >&2; exit 1; }

CONF_DIR="/etc/pwnagotchi/conf.d"
OUT_FILE="${CONF_DIR}/display.toml"
TS="$(date +%Y%m%d-%H%M%S)"

# Keys we manage
KEY_RE='(ui\.display\.(enabled|type|rotation)|ui\.invert)'

# Desired content
DESIRED="$(cat <<'EOF'
# Gotchi-approved display settings (generated by enforce-display-gotchi.sh)
ui.display.enabled = true
ui.display.type = "waveshare_4"
ui.display.rotation = 180
ui.invert = true
EOF
)"

mkdir -p "$CONF_DIR"

echo "(◕‿◕) scanning $CONF_DIR for messy configs …"

CLEAN_COUNT=0
KEY_COUNT=0
CHANGED=0

# 1) Tidy other conf files
for f in "$CONF_DIR"/*.toml; do
  [[ -f "$f" ]] || continue
  [[ "$f" == "$OUT_FILE" ]] && continue

  if grep -Eq "^[[:space:]]*$KEY_RE[[:space:]]*=" "$f"; then
    MOVED=$(grep -Ec "^[[:space:]]*$KEY_RE[[:space:]]*=" "$f" || true)
    echo "(☉_☉ ) trainer, $(basename "$f") has $MOVED stray display key(s)!"
    echo "        → backup: ${f}.bak.${TS}"
    cp -a "$f" "${f}.bak.${TS}"
    # Comment out strays
    sed -E -i "/^[[:space:]]*$KEY_RE[[:space:]]*=/ s|^|# gotchi moved: |" "$f"
    echo "        → moved out; they belong in display.toml ♥"
    CLEAN_COUNT=$((CLEAN_COUNT+1))
    KEY_COUNT=$((KEY_COUNT+MOVED))
    CHANGED=1
  fi
done

# 2) Ensure display.toml matches desired content
CURRENT="$(test -f "$OUT_FILE" && sed -e 's/[[:space:]]*$//' "$OUT_FILE" || true)"
if [[ "$CURRENT" != "$(printf '%s\n' "$DESIRED" | sed -e 's/[[:space:]]*$//')" ]]; then
  echo "(✜‿‿✜) writing my perfect display config to $(basename "$OUT_FILE") …"
  # backup if exists
  [[ -f "$OUT_FILE" ]] && cp -a "$OUT_FILE" "${OUT_FILE}.bak.${TS}"
  printf '%s\n' "$DESIRED" > "$OUT_FILE"
  CHANGED=1
fi

echo
if (( CLEAN_COUNT > 0 )); then
  echo "(≖‿‿≖) hehe, I fixed $KEY_COUNT key(s) across $CLEAN_COUNT file(s)."
else
  echo "(•‿‿•) yay! no messy stray keys found."
fi

if (( CHANGED )); then
  echo
  echo "💡 Restart me with:"
  echo "    sudo systemctl restart pwnagotchi"
  echo " or just run: pwnkill"
  echo
  echo "(♥‿‿♥) thx trainer, my screen settings are super clean now!"
else
  echo
  echo "(^‿‿^) nothing to do — already perfect!"
fi
